
;; Function main (main, funcdef_no=0, decl_uid=2323, cgraph_uid=1, symbol_order=0)

Partition 0: size 4 align 4
	number

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 21.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.2382+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":11:12 -1
     (nil))
(insn 6 3 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f4dc5d25f30 *.LC0>)) "hello.c":13:5 -1
     (nil))
(insn 7 6 8 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "hello.c":13:5 -1
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4dc5c4aa00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "hello.c":13:5 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 85)
                (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":14:5 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 85)) "hello.c":14:5 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f4dc5d3e000 *.LC1>)) "hello.c":14:5 -1
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "hello.c":14:5 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f4dc5c4b600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "hello.c":14:5 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 82 [ number.0_1 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 number+0 S4 A32])) "hello.c":17:5 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 5 di)
        (reg:SI 82 [ number.0_1 ])) "hello.c":17:5 -1
     (nil))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref:DI ("displayResults") [flags 0x3]  <function_decl 0x7f4dc5d1dc00 displayResults>) [0 displayResults S1 A8])
        (const_int 0 [0])) "hello.c":17:5 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 17 16 20 2 (set (reg:SI 83 [ _6 ])
        (const_int 0 [0])) "hello.c":19:12 -1
     (nil))
(insn 20 17 24 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _6 ])) -1
     (nil))
(insn 24 20 25 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.2382+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "hello.c":20:1 -1
     (nil))
(jump_insn 25 24 32 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "hello.c":20:1 -1
     (nil)
 -> 28)
(note 32 25 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 26 32 27 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f4dc5d37a00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "hello.c":20:1 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 27 26 28)
(code_label 28 27 33 7 3 (nil) [1 uses])
(note 33 28 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 33 30 7 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "hello.c":20:1 -1
     (nil))
(insn 30 29 0 7 (use (reg/i:SI 0 ax)) "hello.c":20:1 -1
     (nil))

;; Function factorialIterative (factorialIterative, funcdef_no=1, decl_uid=2314, cgraph_uid=2, symbol_order=1)

Partition 0: size 8 align 8
	factorial_3
Partition 1: size 4 align 4
	i_4

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 42.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])
        (reg:SI 5 di [ n ])) "hello.c":23:46 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 factorial+0 S8 A64])
        (const_int 1 [0x1])) "hello.c":24:24 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "hello.c":25:14 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (label_ref 31)) "hello.c":25:5 -1
     (nil)
 -> 31)
(barrier 9 8 33)
(code_label 33 9 10 4 7 (nil) [1 uses])
(note 10 33 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "hello.c":27:13 -1
     (nil))
(insn 12 11 13 4 (set (reg:SI 5 di)
        (reg:SI 86)) "hello.c":27:13 -1
     (nil))
(call_insn 13 12 14 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isPrime") [flags 0x3]  <function_decl 0x7f4dc5d1da00 isPrime>) [0 isPrime S1 A8])
            (const_int 0 [0]))) "hello.c":27:13 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 14 13 15 4 (set (reg:QI 82 [ _1 ])
        (reg:QI 0 ax)) "hello.c":27:13 -1
     (nil))
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 82 [ _1 ])
            (const_int 0 [0]))) "hello.c":27:12 -1
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "hello.c":27:12 -1
     (nil)
 -> 23)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "hello.c":28:13 -1
     (nil))
(insn 19 18 20 5 (set (reg:SI 4 si)
        (reg:SI 87)) "hello.c":28:13 -1
     (nil))
(insn 20 19 21 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f4dc5d3e510 *.LC2>)) "hello.c":28:13 -1
     (nil))
(insn 21 20 22 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "hello.c":28:13 -1
     (nil))
(call_insn 22 21 23 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4dc5c4aa00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "hello.c":28:13 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 23 22 24 6 6 (nil) [1 uses])
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "hello.c":30:19 -1
     (nil))
(insn 26 25 27 6 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 88))) "hello.c":30:19 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 factorial+0 S8 A64])) "hello.c":30:19 -1
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 89)
                (mult:DI (reg:DI 90)
                    (reg:DI 83 [ _2 ])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":30:19 -1
     (nil))
(insn 29 28 30 6 (set (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 factorial+0 S8 A64])
        (reg:DI 89)) "hello.c":30:19 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":25:29 -1
     (nil))
(code_label 31 30 32 7 5 (nil) [1 uses])
(note 32 31 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 32 35 7 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "hello.c":25:5 -1
     (nil))
(insn 35 34 36 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91)
            (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32]))) "hello.c":25:5 -1
     (nil))
(jump_insn 36 35 37 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "hello.c":25:5 -1
     (nil)
 -> 33)
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 41 8 (set (reg:DI 84 [ _11 ])
        (mem/c:DI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 factorial+0 S8 A64])) "hello.c":32:12 -1
     (nil))
(insn 41 38 45 8 (set (reg:DI 85 [ <retval> ])
        (reg:DI 84 [ _11 ])) "hello.c":32:12 -1
     (nil))
(insn 45 41 46 8 (set (reg/i:DI 0 ax)
        (reg:DI 85 [ <retval> ])) "hello.c":33:1 -1
     (nil))
(insn 46 45 0 8 (use (reg/i:DI 0 ax)) "hello.c":33:1 -1
     (nil))

;; Function factorialRecursive (factorialRecursive, funcdef_no=2, decl_uid=2316, cgraph_uid=3, symbol_order=2)

Partition 0: size 4 align 4
	fib_9

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 37.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])
        (reg:SI 5 di [ n ])) "hello.c":36:46 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])
            (const_int 0 [0]))) "hello.c":37:8 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) "hello.c":37:8 -1
     (nil)
 -> 12)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg:DI 85 [ _4 ])
        (const_int 1 [0x1])) "hello.c":38:16 -1
     (nil))
(jump_insn 10 9 11 4 (set (pc)
        (label_ref 34)) "hello.c":38:16 -1
     (nil)
 -> 34)
(barrier 11 10 12)
(code_label 12 11 13 5 10 (nil) [1 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])) "hello.c":41:19 -1
     (nil))
(insn 15 14 16 5 (set (reg:SI 5 di)
        (reg:SI 87)) "hello.c":41:19 -1
     (nil))
(call_insn 16 15 17 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fibonacci") [flags 0x3]  <function_decl 0x7f4dc5d1db00 fibonacci>) [0 fibonacci S1 A8])
            (const_int 0 [0]))) "hello.c":41:19 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 17 16 18 5 (set (reg:SI 88)
        (reg:SI 0 ax)) "hello.c":41:19 -1
     (nil))
(insn 18 17 19 5 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 fib+0 S4 A32])
        (reg:SI 88)) "hello.c":41:19 -1
     (nil))
(insn 19 18 20 5 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 fib+0 S4 A32])) "hello.c":42:9 -1
     (nil))
(insn 20 19 21 5 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])) "hello.c":42:9 -1
     (nil))
(insn 21 20 22 5 (set (reg:SI 1 dx)
        (reg:SI 89)) "hello.c":42:9 -1
     (nil))
(insn 22 21 23 5 (set (reg:SI 4 si)
        (reg:SI 90)) "hello.c":42:9 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f4dc5d3ec60 *.LC3>)) "hello.c":42:9 -1
     (nil))
(insn 24 23 25 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "hello.c":42:9 -1
     (nil))
(call_insn 25 24 26 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4dc5c4aa00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "hello.c":42:9 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 26 25 27 5 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])) "hello.c":43:18 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 82 [ _1 ])
        (sign_extend:DI (reg:SI 91))) "hello.c":43:18 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])) "hello.c":43:20 -1
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:SI 83 [ _2 ])
                (plus:SI (reg:SI 92)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":43:20 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 30 29 31 5 (set (reg:SI 5 di)
        (reg:SI 83 [ _2 ])) "hello.c":43:20 -1
     (nil))
(call_insn 31 30 32 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("factorialRecursive") [flags 0x3]  <function_decl 0x7f4dc5d1d900 factorialRecursive>) [0 factorialRecursive S1 A8])
            (const_int 0 [0]))) "hello.c":43:20 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 32 31 33 5 (set (reg:DI 84 [ _3 ])
        (reg:DI 0 ax)) "hello.c":43:20 -1
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg:DI 85 [ _4 ])
                (mult:DI (reg:DI 82 [ _1 ])
                    (reg:DI 84 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":43:18 -1
     (nil))
(code_label 34 33 35 6 11 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 40 6 (set (reg:DI 86 [ <retval> ])
        (reg:DI 85 [ _4 ])) -1
     (nil))
(insn 40 36 41 6 (set (reg/i:DI 0 ax)
        (reg:DI 86 [ <retval> ])) "hello.c":45:1 -1
     (nil))
(insn 41 40 0 6 (use (reg/i:DI 0 ax)) "hello.c":45:1 -1
     (nil))

;; Function isPrime (isPrime, funcdef_no=3, decl_uid=2318, cgraph_uid=4, symbol_order=3)

Partition 0: size 4 align 4
	i_3

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 44.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])
        (reg:SI 5 di [ n ])) "hello.c":48:21 -1
     (nil))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 9 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])
            (const_int 1 [0x1]))) "hello.c":49:8 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "hello.c":49:8 -1
     (nil)
 -> 14)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:QI 84 [ _4 ])
        (const_int 0 [0])) "hello.c":49:24 -1
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (label_ref 41)) "hello.c":49:24 -1
     (nil)
 -> 41)
(barrier 13 12 14)
(code_label 14 13 15 5 13 (nil) [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "hello.c":50:14 -1
     (nil))
(jump_insn 17 16 18 5 (set (pc)
        (label_ref 32)) "hello.c":50:5 -1
     (nil)
 -> 32)
(barrier 18 17 36)
(code_label 36 18 19 6 17 (nil) [1 uses])
(note 19 36 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])) "hello.c":51:15 -1
     (nil))
(insn 21 20 22 6 (parallel [
            (set (reg:SI 88)
                (div:SI (reg:SI 86)
                    (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])))
            (set (reg:SI 87)
                (mod:SI (reg:SI 86)
                    (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":51:15 -1
     (nil))
(insn 22 21 23 6 (set (reg:SI 82 [ _1 ])
        (reg:SI 87)) "hello.c":51:15 -1
     (nil))
(insn 23 22 24 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "hello.c":51:12 -1
     (nil))
(jump_insn 24 23 25 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "hello.c":51:12 -1
     (nil)
 -> 29)
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:QI 84 [ _4 ])
        (const_int 0 [0])) "hello.c":51:32 -1
     (nil))
(jump_insn 27 26 28 7 (set (pc)
        (label_ref 41)) "hello.c":51:32 -1
     (nil)
 -> 41)
(barrier 28 27 29)
(code_label 29 28 30 8 16 (nil) [1 uses])
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":50:34 -1
     (nil))
(code_label 32 31 33 9 15 (nil) [1 uses])
(note 33 32 34 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 9 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "hello.c":50:23 -1
     (nil))
(insn 35 34 37 9 (parallel [
            (set (reg:SI 83 [ _2 ])
                (mult:SI (reg:SI 89)
                    (reg:SI 89)))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":50:23 -1
     (nil))
(insn 37 35 38 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [2 n+0 S4 A32])
            (reg:SI 83 [ _2 ]))) "hello.c":50:5 -1
     (nil))
(jump_insn 38 37 39 9 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "hello.c":50:5 -1
     (nil)
 -> 36)
(note 39 38 40 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 10 (set (reg:QI 84 [ _4 ])
        (const_int 1 [0x1])) "hello.c":53:12 -1
     (nil))
(code_label 41 40 42 11 14 (nil) [2 uses])
(note 42 41 43 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 47 11 (set (reg:QI 85 [ <retval> ])
        (reg:QI 84 [ _4 ])) -1
     (nil))
(insn 47 43 48 11 (set (reg/i:QI 0 ax)
        (reg:QI 85 [ <retval> ])) "hello.c":54:1 -1
     (nil))
(insn 48 47 0 11 (use (reg/i:QI 0 ax)) "hello.c":54:1 -1
     (nil))

;; Function fibonacci (fibonacci, funcdef_no=4, decl_uid=2320, cgraph_uid=5, symbol_order=4)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 30.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])
        (reg:SI 5 di [ n ])) "hello.c":57:22 -1
     (nil))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 9 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])
            (const_int 1 [0x1]))) "hello.c":58:8 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "hello.c":58:8 -1
     (nil)
 -> 14)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:SI 86 [ _5 ])
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])) "hello.c":58:24 -1
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (label_ref 27)) "hello.c":58:24 -1
     (nil)
 -> 27)
(barrier 13 12 14)
(code_label 14 13 15 5 19 (nil) [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])) "hello.c":59:12 -1
     (nil))
(insn 17 16 18 5 (parallel [
            (set (reg:SI 82 [ _1 ])
                (plus:SI (reg:SI 88)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":59:12 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 18 17 19 5 (set (reg:SI 5 di)
        (reg:SI 82 [ _1 ])) "hello.c":59:12 -1
     (nil))
(call_insn 19 18 20 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fibonacci") [flags 0x3]  <function_decl 0x7f4dc5d1db00 fibonacci>) [0 fibonacci S1 A8])
            (const_int 0 [0]))) "hello.c":59:12 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 20 19 21 5 (set (reg:SI 83 [ _2 ])
        (reg:SI 0 ax)) "hello.c":59:12 -1
     (nil))
(insn 21 20 22 5 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])) "hello.c":59:31 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:SI 84 [ _3 ])
                (plus:SI (reg:SI 89)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":59:31 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))
(insn 23 22 24 5 (set (reg:SI 5 di)
        (reg:SI 84 [ _3 ])) "hello.c":59:31 -1
     (nil))
(call_insn 24 23 25 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fibonacci") [flags 0x3]  <function_decl 0x7f4dc5d1db00 fibonacci>) [0 fibonacci S1 A8])
            (const_int 0 [0]))) "hello.c":59:31 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 25 24 26 5 (set (reg:SI 85 [ _4 ])
        (reg:SI 0 ax)) "hello.c":59:31 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:SI 86 [ _5 ])
                (plus:SI (reg:SI 83 [ _2 ])
                    (reg:SI 85 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "hello.c":59:29 -1
     (nil))
(code_label 27 26 28 6 20 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 33 6 (set (reg:SI 87 [ <retval> ])
        (reg:SI 86 [ _5 ])) -1
     (nil))
(insn 33 29 34 6 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) "hello.c":60:1 -1
     (nil))
(insn 34 33 0 6 (use (reg/i:SI 0 ax)) "hello.c":60:1 -1
     (nil))

;; Function displayResults (displayResults, funcdef_no=5, decl_uid=2322, cgraph_uid=6, symbol_order=5)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 13 from 6 to 7.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])
        (reg:SI 5 di [ n ])) "hello.c":63:28 -1
     (nil))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 9 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])
            (const_int 0 [0]))) "hello.c":64:8 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "hello.c":64:8 -1
     (nil)
 -> 15)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f4dc5d47f30 *.LC4>)) "hello.c":65:9 -1
     (nil))
(call_insn 12 11 13 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f4dc5c4b100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "hello.c":65:9 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 13 12 14 4 (set (pc)
        (label_ref:DI 39)) 660 {jump}
     (nil)
 -> 39)
(barrier 14 13 15)
(code_label 15 14 16 5 22 (nil) [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])) "hello.c":67:9 -1
     (nil))
(insn 18 17 19 5 (set (reg:SI 5 di)
        (reg:SI 84)) "hello.c":67:9 -1
     (nil))
(call_insn 19 18 20 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("factorialIterative") [flags 0x3]  <function_decl 0x7f4dc5d1d800 factorialIterative>) [0 factorialIterative S1 A8])
            (const_int 0 [0]))) "hello.c":67:9 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 20 19 21 5 (set (reg:DI 82 [ _1 ])
        (reg:DI 0 ax)) "hello.c":67:9 -1
     (nil))
(insn 21 20 22 5 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])) "hello.c":67:9 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 1 dx)
        (reg:DI 82 [ _1 ])) "hello.c":67:9 -1
     (nil))
(insn 23 22 24 5 (set (reg:SI 4 si)
        (reg:SI 85)) "hello.c":67:9 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f4dc5d50000 *.LC5>)) "hello.c":67:9 -1
     (nil))
(insn 25 24 26 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "hello.c":67:9 -1
     (nil))
(call_insn 26 25 27 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4dc5c4aa00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "hello.c":67:9 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 27 26 28 5 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])) "hello.c":68:9 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 5 di)
        (reg:SI 86)) "hello.c":68:9 -1
     (nil))
(call_insn 29 28 30 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("factorialRecursive") [flags 0x3]  <function_decl 0x7f4dc5d1d900 factorialRecursive>) [0 factorialRecursive S1 A8])
            (const_int 0 [0]))) "hello.c":68:9 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 30 29 31 5 (set (reg:DI 83 [ _2 ])
        (reg:DI 0 ax)) "hello.c":68:9 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 77 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 n+0 S4 A32])) "hello.c":68:9 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 1 dx)
        (reg:DI 83 [ _2 ])) "hello.c":68:9 -1
     (nil))
(insn 33 32 34 5 (set (reg:SI 4 si)
        (reg:SI 87)) "hello.c":68:9 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f4dc5d50090 *.LC6>)) "hello.c":68:9 -1
     (nil))
(insn 35 34 36 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "hello.c":68:9 -1
     (nil))
(call_insn 36 35 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f4dc5c4aa00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "hello.c":68:9 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 39 36 40 7 21 (nil) [1 uses])
(note 40 39 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
